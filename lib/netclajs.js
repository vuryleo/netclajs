// Generated by CoffeeScript 1.7.1
var NetClajs, cheerio, request, url, urls;

request = require('request');

cheerio = request('cheerio');

url = require('url');

urls = require('./urls');

NetClajs = (function() {
  function NetClajs(username, password) {
    this.username = username;
    this.password = password;
    this.cookies = request.jar();
    this.request = request.defaults({
      jar: this.cookies,
      followRedirect: false
    });
  }

  NetClajs.prototype.login = function(callback) {
    var data;
    data = {
      i_user: this.username,
      i_pass: this.password
    };
    return this.request.post(urls.login, {
      form: data
    }, (function(_this) {
      return function(err, res, body) {
        var redirectUrl;
        if (err) {
          callback(err);
        }
        redirectUrl = url.parse(res.headers.location, true);
        if (redirectUrl.query.status === 'SUCCESS') {
          return _this.request.get(res.headers.location, function(err, res, body) {
            return callback(null);
          });
        } else {
          return callback(new Error('login failed'));
        }
      };
    })(this));
  };

  NetClajs.prototype.checkLogin = function(callback, next) {
    return this.request.get(urls.dashboard, (function(_this) {
      return function(err, res, body) {
        if (res.statusCode === 302) {
          return _this.login(function(err) {
            if (err) {
              return callback(err);
            } else {
              return next();
            }
          });
        } else {
          return next();
        }
      };
    })(this));
  };

  NetClajs.prototype.courselist = function(callback) {
    return this.checkLogin(callback, (function(_this) {
      return function() {
        return _this.request.get(urls.courselist, function(err, res, body) {
          if (err) {
            return callback(err);
          }
        });
      };
    })(this));
  };

  return NetClajs;

})();

module.exports = NetClajs;
